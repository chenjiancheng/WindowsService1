<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.  C:/CJCWpfApp/
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
    <target name="exceptionFile" xsi:type="File" fileName="${basedir}/AppLogs/${shortdate}/${logger}_${level}.txt" layout="[${longdate}][${level:uppercase=true}][${logger}]${newline}${message}${newline}"/>

    <target name="db" xsi:type="Database" dbProvider="MySql.Data.MySqlClient.MySqlConnection, MySql.Data" connectionString="Server=127.0.0.1;Database=tree;user id=root;pwd=root" commandText="insert into log(createdate,origin,logLevel,message,stackTrace) values (@createdate,@origin,@logLevel,@message,@stackTrace)">
      <!--日志发生时间-->
      <parameter name="@createdate" layout="${longdate}"/>
      <!--日志来源-->
      <parameter name="@origin" layout="${callsite}"/>
      <!--日志等级-->
      <parameter name="@logLevel" layout="${level}"/>
      <!--日志信息-->
      <parameter name="@message" layout="${message}"/>
      <!--堆栈信息-->
      <parameter name="@stackTrace" layout="${stacktrace}"/>
    </target>

    <target name="console" xsi:type="Console" layout="${longdate} | ${level} | ${message}"/>


    <!--http://www.cnblogs.com/GoCircle/p/6117038.html 由于邮箱不满14天不能使用
    <target name="email" xsi:type="Mail"
           smtpServer="smtp.qq.com" smtpPort="587" smtpAuthentication="Basic"
           enableSsl="true"
           smtpUserName="XXX" smtpPassword="gxchenjian"
           from="2156191255@qq.com" to="3208631854@qq.com"
           subject="${machinename}"
           header="===================="
           body="${newline}${message}${newline}"
           footer="===================="
           />

    其中to:收件人的邮箱，可以发送多个收件人，使用逗号分开-->

  </targets>
  <!--
  #######################   rules路由规则    #####################
  　name：记录日志的名字。可以使用通配符*
　  minlevel：记录日志的最低级别，如配置为Debug，那么所有高于等于这个级别的日志都会写到日志文件里。
                     当然也可以指定maxlevel或者单一level，如level=“Debug”，那么只记录Debug级别的信息。也可以指定levels，格式为levels=“Debug,Info”。
    maxlevel： 该规则所匹配日志范围的最高级别
    level：该规则所匹配的单一日志级别
    levels：该规则所匹配的一系列日志级别，由逗号分隔。
　  writeTo：写入的目标日志文件
    final ： 标记当前规则为最后一个规则。其后的规则即时匹配也不会被运行。
  -->
  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <logger name="*" minlevel="Debug" writeTo="console"/>
    <logger name="*" minlevel="Info" writeTo="exceptionFile"/>
    <logger name="*" minlevel="Error" writeTo="db"/>
    <!--<logger name="*" minlevel="Error" writeTo="email"/>
    <logger name="*" minlevel="Trace" writeTo="message"/>-->
    <logger name="*" minlevel="Fatal" writeTo="db"/>
  </rules>
</nlog>
